# SuperBot
# made for SuperBot 

# imported from ULTRA-X by madboy482

# COPYRIGHT (C) 2021-2022 BY LEGENDX22
# modify by madboy482 and alain_champion

from SuperBot import bot
from SuperBot import assistant
import heroku3
from telethon import events
from SuperBot import StartTime
import time
import datetime
from . import *
from telethon import events, Button, custom
import re, os
from SuperBot import assistant
from SuperBot import bot

BOT = "ùë∫ùíñùíëùíÜùíìùë©ùíêùíï ùë®ùíîùíîùíäùíîùíïùíÇùíèùíï"

@assistant.on(events.NewMessage(pattern=("/alive")))
async def awake(event):
  MADBOY = f"H·¥á ü ü·¥è !! T ú…™s …™s **{BOT}**\n\n"
  MADBOY += "**A ü ü s ès·¥õ·¥á·¥çs ·¥°·¥è Ä·¥ã…™…¥…¢ ·¥ò Ä·¥è·¥ò·¥á Ä ü è...**\n\n"
  MADBOY += f"**{BOT} V·¥á Äs…™·¥è…¥** : `1.0.1`\n\n"
  MADBOY += f"**Us·¥á Ä** : @{bot.me.username}\n\n"
  MADBOY += "**F·¥ú ü ü è ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ö  ô·¥è·¥õ...**\n\n"
  MADBOY += "**T·¥á ü·¥á·¥õ ú·¥è…¥** : `1.21.1`\n\n"
  MADBOY += "~~ **T ú·¥Ä…¥·¥ãs “ì·¥è Ä ·¥Ñ ú·¥á·¥Ñ·¥ã…™…¥…¢ ·¥ç·¥á** !!"
  BUTTON = [[Button.url("M·¥Äs·¥õ·¥á Ä", f"https://t.me/{bot.me.username}"), Button.url(f"{BOT} R·¥á·¥ò·¥è", "https://github.com/MadBoy-X/SuperBot")]]
  BUTTON += [[custom.Button.inline("R·¥á·¥ò·¥ès…™·¥õ·¥è Ä…™·¥ás ¬ª¬ª", data="MADBOY")]]
  await assistant.send_file(event.chat_id, PHOTO, caption=MADBOY,  buttons=BUTTON)




@assistant.on(events.callbackquery.CallbackQuery(data=re.compile(b"MADBOY")))
async def callback_query_handler(event):
# inline by LEGENDX22 and PROBOY22 üî•
  MADBOYX = [[Button.url("R·¥á·¥ò·¥è S·¥ú·¥ò·¥á ÄB·¥è·¥õ", "https://github.com/MadBoy-X/SuperBot")]]
  MADBOYX +=[[Button.url("D·¥á·¥ò ü·¥è è S·¥ú·¥ò·¥á ÄB·¥è·¥õ", "https://dashboard.heroku.com/new?button-url=https%3A%2F%2Fgithub.com%2FMadBoy-X%2FSuperBot-Deploy&template=https%3A%2F%2Fgithub.com%2FMadBoy-X%2FSuperBot-Deploy")]]
  MADBOYX +=[[Button.url("T·¥ú·¥õ·¥è Ä…™·¥Ä ü", ""), Button.url("S·¥õ Ä…™…¥…¢ S·¥áss…™·¥è…¥", "https://replit.com/@madboy482/SuperBot#main.py")]]
  MADBOYX +=[[Button.url("A·¥ò…™ I·¥Ö & A·¥ò…™ H·¥Äs ú", "https://t.me/API_ScrapperBot"), Button.url("R·¥á·¥Ö…™s", "https://redislabs.com")]]
  MADBOYX +=[[Button.url("S·¥ú·¥ò·¥ò·¥è Ä·¥õ C ú·¥Ä…¥…¥·¥á ü", "https://t.me/SuperBotOT"), Button.url("S·¥ú·¥ò·¥ò·¥è Ä·¥õ G Ä·¥è·¥ú·¥ò", "https://t.me/SuperBot_SupportChat")]]
  MADBOYX +=[[custom.Button.inline("¬´¬´ A ü…™·¥†·¥á", data="MADBOI")]]
  await event.edit(text=f"A ü ü D·¥á·¥õ·¥Ä…™ üs O“ì R·¥á·¥ò·¥ès", buttons=MADBOYX)


@assistant.on(events.callbackquery.CallbackQuery(data=re.compile(b"MADBOI")))
async def callback_query_handler(event):
# inline by LEGENDX22 and PROBOY22 üî•
  MADBOY = f"H·¥á ü ü·¥è !! T ú…™s …™s **{BOT}**\n\n"
  MADBOY += "**A ü ü s ès·¥õ·¥á·¥çs ·¥°·¥è Ä·¥ã…™…¥…¢ ·¥ò Ä·¥è·¥ò·¥á Ä ü è...**\n\n"
  MADBOY += f"**{BOT} V·¥á Äs…™·¥è…¥** : `1.0.1`\n\n"
  MADBOY += f"**Us·¥á Ä** : @{bot.me.username}\n\n"
  MADBOY += "**F·¥ú ü ü è ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ö  ô·¥è·¥õ...**\n\n"
  MADBOY += "**T·¥á ü·¥á·¥õ ú·¥è…¥** : `1.21.1`\n\n"
  MADBOY += "~~ **T ú·¥Ä…¥·¥ãs “ì·¥è Ä ·¥Ñ ú·¥á·¥Ñ·¥ã…™…¥…¢ ·¥ç·¥á** !!"
  BUTTONS = [[Button.url("M·¥Äs·¥õ·¥á Ä", f"https://t.me/{bot.me.username}"), Button.url(f"{BOT} R·¥á·¥ò·¥è", "https://github.com/MadBoy-X/SuperBot")]]
  BUTTONS += [[custom.Button.inline("R·¥á·¥ò·¥ès…™·¥õ·¥è Ä…™·¥ás ¬ª¬ª", data="MADBOY")]]
  await event.edit(text=MADBOY, buttons=BUTTONS)


@assistant.on(events.NewMessage(pattern=("/repo")))
async def repo(event):
  await assistant.send_message(event.chat, "**H·¥á Ä·¥á Is T ú·¥á R·¥á·¥ò·¥è F·¥è Ä S·•ôœÅ“Ω…æ·∫ûœÉùúè** \n\nF·¥è Ä A…¥ è H·¥á ü·¥ò :- @SuperBotOT", buttons=[[Button.url("‚öúÔ∏è R·¥á·¥ò·¥è ‚öúÔ∏è", "https://github.com/MadBoy-X/SuperBot"), Button.url("üî∞ D·¥á·¥ò ü·¥è è üî∞", "https://dashboard.heroku.com/new?button-url=https%3A%2F%2Fgithub.com%2FMadBoy-X%2FSuperBot-Deploy&template=https%3A%2F%2Fgithub.com%2FMadBoy-X%2FSuperBot-Deploy")]])


def get_readable_time(seconds: int) -> str:
    count = 0
    ping_time = ""
    time_list = []
    time_suffix_list = ["s", "m", "h", "days"]

    while count < 4:
        count += 1
        if count < 3:
            remainder, result = divmod(seconds, 60)
        else:
            remainder, result = divmod(seconds, 24)
        if seconds == 0 and remainder == 0:
            break
        time_list.append(int(result))
        seconds = int(remainder)

    for x in range(len(time_list)):
        time_list[x] = str(time_list[x]) + time_suffix_list[x]
    if len(time_list) == 4:
        ping_time += time_list.pop() + ", "

    time_list.reverse()
    ping_time += ":".join(time_list)

    return ping_time

@assistant.on(events.NewMessage(pattern=None))
async def ok(event):
    msg = str(event.text)
    if not msg == "/ping":
     return

    start_time = datetime.datetime.now()
    message = await event.reply("_.._.._Pinging_.._.._")
    end_time = datetime.datetime.now()
    pingtime = end_time - start_time
    telegram_ping = str(round(pingtime.total_seconds(), 2)) + "s"
    uptime = get_readable_time((time.time() - StartTime))
    await message.edit(
        "<b><i> ÍßÅ‡º∫P·¥è…¥…¢ !!‡ºªÍßÇ </i></b>\n"
        "<b>‚û• T…™·¥ç·¥á T·¥Ä·¥ã·¥á…¥:</b> <code>{}</code>\n"
        "<b>‚û• S·¥á Ä·¥†…™·¥Ñ·¥á U·¥ò·¥õ…™·¥ç·¥á:</b> <code>{}</code>".format(telegram_ping, uptime),
        parse_mode="html",
    )
    
# SuperBot
# made for SuperBot 

# imported from ULTRA-X by madboy482
